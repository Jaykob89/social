{"version":3,"sources":["redux/dialog-reducer.ts","api/api.ts","components/Users/users.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/common/Paginator/Paginator.tsx","assets/images/user-profile.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-reducer.ts","redux/user-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","HOC/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControl/FormsControl.tsx","assets/images/lazyload.gif","components/common/preloader/Preloader.tsx","components/common/FormsControl/FormsControl.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.ts","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["initialState","dialogs","id","name","messages","message","dialogReducer","state","action","type","newMessage","newDialogElementAdd","addMessageAC","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unFollow","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","Paginator","totalItemsCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","map","cn","selectedPage","pageNumber","e","User","user","followingInProgress","unfollow","src","photos","small","userPhoto","usersPhoto","followed","disabled","some","Users","totalUsersCount","users","props","u","FOLLOW","UNFOLLOW","SETUSERS","SETCURRENTPAGE","SETTOTALUSERSCOUNT","TOGGLEISFETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","isFetching","followSuccess","unFollowSuccess","setCurrentPages","toggleIsFetching","toggleIsFollowing","requestUsers","page","dispatch","a","items","totalCount","followUnfollowFlow","disatch","apiMethod","actionCreator","resultCode","uId","bind","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainerComponent","this","Preloader","React","Component","mapStateToProps","connect","compose","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserDate","payload","getAuthUserData","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","profilePage","profileReducer","massagesPage","sideBar","formReducer","app","store","createStore","applyMiddleware","thunk","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializedApp","path","render","UsersContainer","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","TextArea","restProps","placeHolder","validators","component","placeholder","validate","preloader","value","maxLengthCreator","maxLength","SETUSEPROFILE","SETSTATUS","posts","likesCount","profile","newPost","newPostText","postId","addPostAC","setStatus","ProfileTC","getStatusTC","updateStatusTC"],"mappings":"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","file":"static/js/main.88be3a82.chunk.js","sourcesContent":["import {messageType, allACTypes} from \"./store\";\n\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrew'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Victor'},\n        {id: 6, name: 'Valera'},\n    ],\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your IT'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'},\n    ],\n}\n\nexport const dialogReducer = (state = initialState, action: allACTypes) => {\n\n    switch (action.type) {\n        case 'ADD-MESSAGE': {\n            let newMessage: messageType = {\n                id: 6,\n                message: action.newDialogElementAdd\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage]\n            };\n        }\n        default:\n            return state\n    }\n}\n\nexport let addMessageAC = (newDialogElementAdd: string) => {\n    return {\n        type: \"ADD-MESSAGE\",\n        newDialogElementAdd,\n    } as const\n}\n\n\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"f8b19b87-e8a3-40e0-aba2-9e995bb36bef\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`, {}).then(response => response.data)\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    }\n    ,\n    unFollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId: string) {\n        console.log('Obsolute method. Please profileApi object')\n        return profileAPI.getProfile(userId)\n    }\n}\nexport const profileAPI = {\n    getProfile(userId: string) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId: string) {\n        return instance.get('profile/status/' + userId);\n    },\n    updateStatus(status: string) {\n        return instance.put('profile/status', {status: status})\n    }\n}\n\nexport const authApi = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email: string, password: string, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__1psvx\",\"selectedPage\":\"users_selectedPage__1mnwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\n\r\nexport default Navbar;","import React, {useState} from \"react\";\nimport styles from './Paginator.module.css';\nimport cn from 'classnames'\n\ntype propsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (p: number) => void\n}\n\nexport let Paginator = ({totalItemsCount, pageSize, onPageChanged, currentPage}: propsType,) => {\n\n    let portionSize = 10\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n    let pages = [];\n    for (let i = 1; i < pagesCount; i++) {\n        pages.push(i);\n    }\n\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n    return <div className={styles.paginator}>\n        {\n            portionNumber > 1 &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>PREV</button>\n        }\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map((p) => {\n                return <span className={cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber)}\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p)\n                             }}> {p} </span>\n            })}\n        {portionCount > portionNumber && <button onClick={() => {\n            setPortionNumber(portionNumber + 1)\n        }}>NEXT</button>}\n    </div>;\n}\n\nexport default Paginator\n","export default __webpack_public_path__ + \"static/media/user-profile.57b4e4a6.png\";","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user-profile.png\";\nimport {usersType} from \"../../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\n\ntype propsType = {\n    user: usersType\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    followingInProgress: Array<number>\n}\n\nexport let User = ({user,followingInProgress,unfollow,follow, ...props}: propsType) => {\n    return (\n        <div>\n                 <span>\n                     <div>\n                         <NavLink to={'/profile/' + user.id}>\n                         <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.usersPhoto}/>\n                             </NavLink>\n                     </div>\n                    <div> {user.followed ?\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                            unfollow(user.id)\n                        }}>Unfollow</button>\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                            follow(user.id)\n                        }}>Follow</button>}\n                    </div>\n                </span>\n            <span><span><div>{user.name}</div>\n                        <div>{user.status}</div></span>\n                    <span>\n\n                         {/*<div>{u.location.city}</div>*/}\n                        {/*<div>{u.location.country}</div>*/}\n                        <div>{'my city'}</div>\n                         <div>{'my country'}</div>\n                     </span>\n                 </span>\n        </div>)\n}\n\n\n","import React from \"react\";\nimport {usersType} from \"../../redux/users-reducer\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport {User} from \"./User\";\n\ntype propsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (p: number) => void\n    users: usersType[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    followingInProgress: Array<number>\n}\n\nexport let Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}: propsType) => {\n\n    return <div>\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\n                   onPageChanged={onPageChanged}\n        />\n        <div>\n            {\n                users.map(u => <User user={u} key={u.id}\n                                     followingInProgress={props.followingInProgress}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}/>)\n            }\n        </div>\n    </div>;\n}\n","import {allACTypes} from \"./store\";\nimport {Dispatch} from \"redux\";\nimport {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SET_USERS';\nconst SETCURRENTPAGE = 'SET_CURRENT_PAGE';\nconst SETTOTALUSERSCOUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLEISFETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nexport type usersType = {\n    id: number\n    followed: boolean\n    name: string\n    photoUrl: string\n    status: string\n    photos: {\n        \"small\": string | null,\n        \"large\": string | null\n    },\n    location: { city: string, country: string }\n}\n\nexport type setUsersType = {\n    items: usersType[]\n    totalCount: number\n}\n\nlet initialState: InitialStateType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nexport type InitialStateType = {\n    users: usersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n\n}\n\nexport const usersReducer = (state: InitialStateType = initialState, action: allACTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                // users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true};\n                    }\n                    return u;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                // users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false};\n                    }\n                    return u;\n                })\n            }\n\n        case SETUSERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case SETCURRENTPAGE: {\n            return {\n                ...state, currentPage: action.currentPage\n            }\n        }\n        case SETTOTALUSERSCOUNT: {\n            return {\n                ...state, totalUsersCount: action.totalUsersCount\n            }\n        }\n        case TOGGLEISFETCHING: {\n            return {\n                ...state, isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId}) as const\nexport const unFollowSuccess = (userId: number) => ({type: UNFOLLOW, userId}) as const\nexport const setUsers = (users: usersType[]) => ({type: SETUSERS, users}) as const\nexport const setCurrentPages = (currentPage: number) => ({type: SETCURRENTPAGE, currentPage}) as const\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SETTOTALUSERSCOUNT, totalUsersCount}) as const\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLEISFETCHING, isFetching}) as const\nexport const toggleIsFollowing = (isFetching: boolean, userId: number) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n}) as const\n\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPages(page))\n\n    let data: setUsersType = await usersAPI.getUsers(page, pageSize)\n\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n    dispatch(setCurrentPages(page))\n}\n\nconst followUnfollowFlow = async (disatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\n    disatch(toggleIsFollowing(true, userId))\n    let response = await apiMethod(userId)\n    if (response.data.resultCode === 0) {\n        disatch(actionCreator(userId))\n    }\n    disatch(toggleIsFollowing(false, userId))\n}\n\nexport const follow = (uId: number) => {\n    return async (dispatch: Dispatch) => {\n        await followUnfollowFlow(dispatch, uId, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\n\nexport const unFollow = (uId: number) => {\n    return async (dispatch: Dispatch) => {\n        await followUnfollowFlow(dispatch, uId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess)\n    }\n}\n","import {AppStateType} from \"./redux-store\";\nimport {createSelector} from \"reselect\";\n\nexport const getUsersSelector = (state: AppStateType) => {\n    return state.users.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users\n})\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.users.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.users.totalUsersCount\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.users.currentPage\n}\nexport const getIsFetching = (state: AppStateType) => {\n    return state.users.isFetching\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.users.followingInProgress\n}\n\n\n\n","import React from \"react\";\nimport {Users} from \"./Users\";\nimport {connect} from \"react-redux\";\nimport {\n    follow, requestUsers,\n    setCurrentPages,\n    toggleIsFollowing,\n    unFollow, usersType,\n} from \"../../redux/users-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {RootStateType} from \"../../redux/store\";\nimport {Preloader} from \"../common/preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/user-selectors\";\n\nclass UsersContainerComponent extends React.Component<UsersPropsType, RootStateType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        const {pageSize} = this.props\n        this.props.getUsers(pageNumber, pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unFollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n\n        </>\n    }\n}\n\ntype MapStatePropsType = {\n    users: usersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\ntype mapDispatchToPropsType = {\n    follow: (userId: number) => void\n    unFollow: (userId: number) => void\n    setCurrentPages: (pageNumber: number) => void\n    toggleIsFollowing: (isFetching: boolean, userId: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\n\nexport type UsersPropsType = MapStatePropsType & mapDispatchToPropsType\n\nconnect(mapStateToProps, {\n    follow, unFollow, setCurrentPages,\n    toggleIsFollowing, getUsers: requestUsers\n})\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        follow, unFollow, setCurrentPages,\n        toggleIsFollowing, getUsers: requestUsers\n    })\n)(UsersContainerComponent)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = ({...props}) => {\r\n    return <header className={s.header}>\r\n        <img src='https://m.media-amazon.com/images/I/41i4xgZG36L._AC_SY355_.jpg'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div> {props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                :\r\n                <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n","import {Dispatch} from \"redux\";\nimport {authApi} from \"../api/api\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {allACTypes, StoreType} from \"./store\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {AxiosResponse} from \"axios\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\ntype initialStateType = {\n    userId: number | null,\n    email: string | null,\n    login: string | null,\n    isFetching: boolean\n    isAuth: boolean\n}\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false\n}\n\nexport const authReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n}\nexport type  SetAuthUserDateType = ReturnType<typeof setAuthUserDate>\ntype ActionsType = SetAuthUserDateType\n\nexport const setAuthUserDate = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n} as const)\n\nexport type ResponseType = {\n    resultCode: number\n    messages: [],\n    data: {\n        id: number,\n        email: string,\n        login: string\n    }\n}\n\nexport const getAuthUserData = () => {\n    return async (dispatch: Dispatch) => {\n        let response: AxiosResponse<ResponseType> = await authApi.me()\n        if (response.data.resultCode === 0) {\n            let {id, login, email} = response.data.data\n            dispatch(setAuthUserDate(id, email, login, true))\n        }\n    }\n}\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: ThunkDispatch<StoreType, unknown, allACTypes | FormAction>) => {\n    let response: AxiosResponse<any> = await authApi.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        await dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error'\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\nexport const logout = () => {\n    return async (dispatch: ThunkDispatch<StoreType, unknown, allACTypes>) => {\n        let response: AxiosResponse<ResponseType> = await authApi.logout()\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserDate(null, null, null, false))\n        }\n    }\n}","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\nimport {RootStateType} from \"../../redux/store\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype mapDispatchType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\ntype PropsType = mapDispatchType & mapStateToPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType, RootStateType> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout: logout})(HeaderContainer);\r\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../components/common/FormsControl/FormsControl\";\nimport {required} from \"../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport styles from '../components/common/FormsControl/FormsControl.module.css'\n\ntype FormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\ntype PropsType = {\n    login: (email: string, password: string, rememberMe: boolean) => void\n    isAuth: boolean\n}\n\n\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField('Email', 'email', [required], Input, {})}\n            {createField('Password', 'password', [required], Input, 'password')}\n            {createField(null, 'rememberMe', [], Input, 'checkbox', 'remember me')}\n\n            {error &&\n                <div className={styles.formSummaryError}>\n                    {error}\n                </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\nconst Login = (props: PropsType) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {allACTypes, StoreType} from \"./store\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\ntype initialStateType = {\n    initialized: boolean\n}\n\nlet initialState = {\n    initialized: false,\n}\n\nexport const appReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\nexport type  initializedSuccessType = ReturnType<typeof initializedSuccess>\ntype ActionsType = initializedSuccessType\n\nexport const initializedSuccess = () => ({\n    type: INITIALIZED_SUCCESS,\n} as const)\n\nexport type ResponseType = {\n    resultCode: number\n    messages: [],\n    data: {\n        id: number,\n        email: string,\n        login: string\n    }\n}\n\nexport const initializedApp = () => {\n    return (dispatch: ThunkDispatch<StoreType, unknown, allACTypes>) => {\n        let promise = dispatch(getAuthUserData())\n        Promise.all([promise])\n            .then(() => {\n                dispatch(initializedSuccess())\n            })\n\n    }\n}\n","import {allACTypes} from \"./store\";\n\nlet initialState = {}\n\nexport const sideBarReducer = (state = initialState, action: allACTypes) => {\n    return state\n}","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {dialogReducer} from \"./dialog-reducer\";\nimport {sideBarReducer} from \"./sidebar-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport {authReducer} from \"./auth-reducer\";\nimport thunk from \"redux-thunk\";\nimport {reducer as formReducer} from \"redux-form\";\nimport {appReducer} from \"./app-reducer\";\n\n\nlet rootReducer = combineReducers(\n    {\n        profilePage: profileReducer,\n        massagesPage: dialogReducer,\n        sideBar: sideBarReducer,\n        users: usersReducer,\n        auth: authReducer,\n        form: formReducer,\n        app: appReducer,\n    });\n\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\nexport let store: Store = createStore(rootReducer, applyMiddleware(thunk));","import React, {ComponentType, Suspense} from \"react\";\nimport {Preloader} from \"../components/common/preloader/Preloader\";\n\n\nexport function withSuspense<T>(Component: ComponentType<T>) {\n\n    return (props: any) => {\n        return <Suspense fallback={<Preloader/>}> <Component {...props}/>\n        </Suspense>\n    };\n}\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {RootStateType} from \"./redux/store\";\nimport {initializedApp} from \"./redux/app-reducer\";\nimport {AppStateType, store} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/preloader/Preloader\";\nimport {withSuspense} from \"./HOC/withSuspense\";\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\ntype mapDispatchType = {\n    initializedApp: () => void\n}\n\ntype mapStateToPropsType = {\n    initialized: boolean\n}\n\ntype propsType = mapDispatchType & mapStateToPropsType\n\nclass App extends React.Component<propsType, RootStateType> {\n    componentDidMount() {\n        this.props.initializedApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>);\n    }\n\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializedApp}))(App);\n\nexport let SamuraiJSApp = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {SamuraiJSApp} from \"./App\";\n\n\nReactDOM.render(\n    <SamuraiJSApp/>,\n    document.getElementById('root')\n)\n\n\n\n\n","import React from \"react\";\nimport {Field, WrappedFieldProps} from \"redux-form\";\nimport styles from '../FormsControl/FormsControl.module.css'\n\n\nconst FormControl: React.FC<WrappedFieldProps> = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + '' + (hasError ? styles.error : '')}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const TextArea: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, children, ...restProps} = props\n    return (\n        <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n    )\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, children, ...restProps} = props\n    return (\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n    )\n}\n\nexport const createField = (placeHolder: string | null, name: string, validators: any, component: any, type: any, text = '') =>\n    <div>\n        <Field\n            placeholder={placeHolder} validate={validators}\n            name={name} component={component} type={type}/>\n\n    </div>","export default __webpack_public_path__ + \"static/media/lazyload.06b4e460.gif\";","import React from \"react\";\nimport preloader from \"../../../assets/images/lazyload.gif\";\n\nexport const Preloader = () => {\n    return <img src={preloader}/>\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1ZwPZ\",\"error\":\"FormsControl_error__2Zkz5\",\"formSummaryError\":\"FormsControl_formSummaryError__1PkX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","export const required = (value: string) => {\n    if (value) return undefined\n    return \"Field is required\"\n\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {postsType, allACTypes} from \"./store\";\nimport {profileType} from \"../components/Profile/Profile\";\nimport {Dispatch} from \"redux\";\nimport {profileAPI, usersAPI} from \"../api/api\";\nimport {AxiosResponse} from \"axios\";\n\nconst SETUSEPROFILE = \"SET_USER_PROFILE\";\nconst SETSTATUS = \"SET_STATUS\";\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are You', likesCount: 125},\n        {id: 2, message: \"It's my first post\", likesCount: 23},\n    ],\n    profile: null,\n    status: \"\"\n}\n\ntype initialStateType = {\n    posts: Array<postsType>\n    profile: profileType | null\n    status: string\n}\n\nexport const profileReducer = (state: initialStateType = initialState, action: allACTypes): initialStateType => {\n    switch (action.type) {\n        case \"ADD-POST\": {\n            let newPost: postsType = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost]\n            }\n        }\n        case SETSTATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case\n        SETUSEPROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case\n        \"DELETE-POST\": {\n            return {\n                ...state, posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport let addPostAC = (newPostText: string) => {\n    return {\n        type: \"ADD-POST\",\n        newPostText,\n    } as const\n}\nexport let setUserProfile = (profile: profileType) => {\n    return {\n        type: SETUSEPROFILE,\n        profile\n    } as const\n}\nexport let setStatus = (status: string) => {\n    return {\n        type: SETSTATUS,\n        status\n    } as const\n}\nexport let deletePostAC = (postId: number) => {\n    return {\n        type: \"DELETE-POST\",\n        postId\n    } as const\n}\nexport let updateNewPostTextAC = (newText: string) => {\n    return {\n        type: 'UPDATE-NEW-POST-TEXT',\n        newText\n    } as const\n}\n\nexport const ProfileTC = (userId: string) => async (dispatch: Dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getStatusTC = (userId: string) => async (dispatch: Dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n\n}\n\nexport const updateStatusTC = (status: string) => async (dispatch: Dispatch) => {\n    let response: AxiosResponse<any> = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\n\n"],"sourceRoot":""}